apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: cwft-helm
  annotations:
    argocd.argoproj.io/sync-wave: '0'
spec:
  templates:
  - name: get-chart-version
    inputs:
      artifacts:
        - name: repo-source
          path: /src
      parameters:
        - name: appName
        - name: chartDir
    script:
      image: kubefirst/chubbo:0.2
      command: [python3]
      workingDir: '/src/{{inputs.parameters.appName}}'
      source: |
        import yaml, semver
        with open('./{{inputs.parameters.chartDir}}/Chart.yaml') as f:
            chart_yaml = yaml.load(f, Loader=yaml.FullLoader)
            print(chart_yaml['version'])
  - name: set-chart-versions
    inputs:
      artifacts:
        - name: repo-source
          path: /src
      parameters:
        - name: appName
        - name: chartDir
        - name: chartVersion
        - name: shortSha
    script:
      image: kubefirst/chubbo:0.2
      command: [bash]
      workingDir: '/src/{{inputs.parameters.appName}}'
      source: |
        set -e
        NEW_CHART_VERSION={{inputs.parameters.chartVersion}}
        echo "setting ./{{inputs.parameters.chartDir}}/Chart.yaml to version: ${NEW_CHART_VERSION}"
        sed -i "s/version:.*/version: ${NEW_CHART_VERSION}/g" /src/{{inputs.parameters.appName}}/{{inputs.parameters.chartDir}}/Chart.yaml
        echo "setting ./{{inputs.parameters.chartDir}}/Chart.yaml to appVersion: {{inputs.parameters.shortSha}}"
        sed -i "s/appVersion:.*/appVersion: {{inputs.parameters.shortSha}}/g" /src/{{inputs.parameters.appName}}/{{inputs.parameters.chartDir}}/Chart.yaml
        echo "adjusted chart:"
        cat /src/{{inputs.parameters.appName}}/{{inputs.parameters.chartDir}}/Chart.yaml
    outputs:
      artifacts:
        - name: repo-source
          path: /src
  - name: publish-chart
    retryStrategy:
      limit: '5'
    inputs:
      artifacts:
        - name: repo-source
          path: /src
      parameters:
        - name: appName
        - name: chartDir
    container:
      image: kubefirst/chubbo:0.2
      command: ['bash', '-c']
      workingDir: '/src/{{inputs.parameters.appName}}'
      args:
        - helm repo add kubefirst http://chartmuseum.chartmuseum.svc.cluster.local:8080 --username ${BASIC_AUTH_USER} --password ${BASIC_AUTH_PASS} || bash -c "sleep 10 && echo 'waiting before trying again' && exit 1";
          helm push {{inputs.parameters.chartDir}} kubefirst || bash -c "sleep 10 && echo 'waiting before trying again' && exit 1";
      env:
      - name: BASIC_AUTH_PASS
        valueFrom:
          secretKeyRef:
            name: ci-secrets
            key: BASIC_AUTH_PASS
      - name: BASIC_AUTH_USER
        valueFrom:
          secretKeyRef:
            name: ci-secrets
            key: BASIC_AUTH_USER
  - name: set-environment-version
    inputs:
      artifacts:
        - name: repo-source
          path: /src
      parameters:
        - name: chartVersion
        - name: environment
        - name: fullChartPath
    script:
      image: kubefirst/chubbo:0.2
      command: [bash]
      workingDir: '/src/gitops'
      source: |
        set -e
        echo "setting wrapper Chart.yaml to version: {{inputs.parameters.chartVersion}}"
        sed -i "s/  version:.*/  version: {{inputs.parameters.chartVersion}}/g" "{{inputs.parameters.fullChartPath}}"
        echo "updated {{inputs.parameters.environment}} wrapper chart version to {{inputs.parameters.chartVersion}}"
    outputs:
      artifacts:
        - name: repo-source
          path: /src
  - name: increment-chart-minor
    inputs:
      artifacts:
        - name: repo-source
          path: /src
      parameters:
        - name: appName
        - name: chartDir
        - name: chartVersion
    script:
      image: kubefirst/chubbo:0.2
      command: [python3]
      workingDir: '/src/{{inputs.parameters.appName}}'
      source: |
        import yaml, semver
        with open('./{{inputs.parameters.chartDir}}/Chart.yaml') as f:
            chart_yaml = yaml.load(f, Loader=yaml.FullLoader)
            chart_version = semver.parse('{{inputs.parameters.chartVersion}}')
            next_chart_version = '{}.{}.0'.format(chart_version['major'],chart_version['minor']+1)
            chart_yaml['version'] = next_chart_version
        with open('./{{inputs.parameters.chartDir}}/Chart.yaml', 'w') as f:
            yaml.dump(chart_yaml, f)
        print('prepared next release in {{inputs.parameters.chartDir}} with bumped chart version after releasing {}'.format(next_chart_version))
    outputs:
      artifacts:
        - name: repo-source
          path: /src
