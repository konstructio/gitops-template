apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: vault
  project: default
  source:
    repoURL: 'https://helm.releases.hashicorp.com'
    targetRevision: 0.18.0
    helm:
      parameters:
        - name: server.route.host
          value: vault.<AWS_HOSTED_ZONE_NAME>
        - name: 'server.ingress.hosts[0].host'
          value: vault.<AWS_HOSTED_ZONE_NAME>
      values: |-
        server:
          serviceAccount:
            create: true
            name: vault
            annotations:
              eks.amazonaws.com/role-arn: 'arn:aws:iam::<AWS_ACCOUNT_ID>:role/vault-<CLUSTER_NAME>'
          image:
            repository: "vault"
            tag: "1.11.2"
          affinity: ""
          ha:
            enabled: true
            replicas: 3
           
            # config is a raw string of default configuration when using a Stateful
            # deployment. Default is to use a Consul for its HA storage backend.
            # This should be HCL.
            
            # Note: Configuration files are stored in ConfigMaps so sensitive data 
            # such as passwords should be either mounted through extraSecretEnvironmentVars
            # or through a Kube secret.  For more information see: 
            # https://www.vaultproject.io/docs/platform/k8s/helm/run#protecting-sensitive-vault-configurations
            config: |
              ui = true
        
              listener "tcp" {
                tls_disable = 1
                address = "[::]:8200"
                cluster_address = "[::]:8201"
              }
        
              storage "dynamodb" {
                ha_enabled = "true"
                region = "<AWS_DEFAULT_REGION>"
                table = "vault-backend-<CLUSTER_NAME>"
              }
        
              seal "awskms" {
                 region     = "<AWS_DEFAULT_REGION>"
                 kms_key_id = "<KMS_KEY_ID>"
              }
              service_registration "kubernetes" {}
        
          ui:
            enabled: true
            serviceType: "ClusterIP"
            serviceNodePort: null
            externalPort: 8200
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            path: /
            host: vault.<AWS_HOSTED_ZONE_NAME>
            tls:
             - secretName: vault-tls
               hosts:
                 - vault.<AWS_HOSTED_ZONE_NAME>
        injector:
          enabled: true
    chart: vault
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  ignoreDifferences:
  - group: admissionregistration.k8s.io
    kind: MutatingWebhookConfiguration
    jsonPointers:
    - /webhooks
