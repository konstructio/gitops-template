apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: cwft-git
spec:
  templates:
  - name: git-checkout-with-gitops-ssh
    inputs:
      parameters: 
      - name: appDir
      - name: branch
        value: "{{workflow.parameters.branch}}"
        default: main
      - name: buildImage
        value: "{{workflow.parameters.buildImage}}"
        default: kubefirst/kubefirst-builder:0.1
      - name: gitopsRepoUrl
        value: "{{workflow.parameters.gitopsRepoUrl}}"
        default: "ssh://<FULL_REPO_GITOPS_URL>"
      - name: gitRepoUrl
      artifacts:
      - name: repo-source
        path: "{{inputs.parameters.appDir}}"
        git:
          repo: "{{inputs.parameters.gitRepoUrl}}"
          revision: "{{inputs.parameters.branch}}"
          insecureIgnoreHostKey: true
          sshPrivateKeySecret:
            name: ci-secrets
            key: SSH_PRIVATE_KEY    
      - name: gitops-source
        path: /src/gitops
        git:
          repo: "ssh://<FULL_REPO_GITOPS_URL_SSH>"
          revision: "main"
          insecureIgnoreHostKey: true
          sshPrivateKeySecret:
            name: ci-secrets
            key: SSH_PRIVATE_KEY    
            
    container:
      image: golang:latest
      command: ["/bin/sh", "-c"]
      args: 
      - ls -la /src && 
        ls -la {{inputs.parameters.appDir}}
    outputs:
      artifacts:
      - name: repo-source
        path: /src  
        
  - name: git-checkout-with-gitops
    inputs:
      parameters: 
      - name: appDir
      - name: branch
        value: "{{workflow.parameters.branch}}"
        default: main
      - name: buildImage
        value: "{{workflow.parameters.buildImage}}"
        default: kubefirst/kubefirst-builder:0.1
      - name: gitopsRepoUrl
        value: "{{workflow.parameters.gitopsRepoUrl}}"
        default: <FULL_REPO_GITOPS_URL>
      - name: gitRepoUrl
      artifacts:
      - name: repo-source
        path: "{{inputs.parameters.appDir}}"
        git:
          repo: "{{inputs.parameters.gitRepoUrl}}"
          revision: "{{inputs.parameters.branch}}"
          usernameSecret:
            name: ci-secrets
            key: USERNAME
          passwordSecret:
            name: ci-secrets
            key: PERSONAL_ACCESS_TOKEN
      - name: gitops-source
        path: /src/gitops
        git:
          repo: "{{inputs.parameters.gitopsRepoUrl}}"
          revision: "main"
          usernameSecret:
            name: ci-secrets
            key: USERNAME
          passwordSecret:
            name: ci-secrets
            key: PERSONAL_ACCESS_TOKEN
    container:
      image: golang:latest
      command: ["/bin/sh", "-c"]
      args: 
      - ls -la /src && 
        ls -la {{inputs.parameters.appDir}}
    outputs:
      artifacts:
      - name: repo-source
        path: /src

  - name: git-commit
    retryStrategy:
      limit: "5"    
    inputs:
      artifacts:
      - name: repo-source
        path: /src
      parameters: 
        - name: appDir
        - name: commitMessage
        - name: repoPath
          value: "{{workflow.parameters.repoPath}}"
          default: <FULL_REPO_GITOPS_URL_NO_HTTPS>
        - name: gitUserEmail
          value: "{{workflow.parameters.gitUserEmail}}"
          default: <EMAIL_ADDRESS>
        - name: gitUsername
          value: "{{workflow.parameters.gitUsername}}"
          default: gitlab-bot
    container:
      workingDir: "{{inputs.parameters.appDir}}"
      image: golang:latest
      command: ["/bin/sh", "-c"]
      # todo is this remote set-url good enough?
      args: 
        - git remote set-url origin https://$USERNAME:$PERSONAL_ACCESS_TOKEN@{{inputs.parameters.repoPath}} 2>/dev/null;
          git remote -v;
          git config --global user.email '{{inputs.parameters.gitUserEmail}}';
          git config --global user.name '{{inputs.parameters.gitUsername}}';
          git status;
          git pull;
          git add .;
          git commit -m "{{inputs.parameters.commitMessage}}" || echo "Assuming this was committed on previous run, not erroring out" ;
          git push || bash -c "sleep 10 && echo 'waiting before trying again' && exit 1";
      envFrom:
      - secretRef:
          name: ci-secrets

  - name: git-commit-ssh
    retryStrategy:
      limit: "5"      
    volumes:
     - name: ssh-key
       secret:
          defaultMode: 256
          secretName: ci-secrets
    inputs:
      artifacts:
      - name: repo-source
        path: /src
      parameters: 
        - name: appDir
        - name: commitMessage
        - name: repoPath
          value: "{{workflow.parameters.repoPath}}"
          default: ssh://<FULL_REPO_GITOPS_URL_SSH>
        - name: gitUserEmail
          value: "{{workflow.parameters.gitUserEmail}}"
          default: <EMAIL_ADDRESS>
        - name: gitUsername
          value: "{{workflow.parameters.gitUsername}}"
          default: gitlab-bot
    container:
      workingDir: "{{inputs.parameters.appDir}}"
      image: golang:latest
      command: ["/bin/sh", "-c"]
      # todo is this remote set-url good enough?   
      volumeMounts:
        - mountPath: "/mnt/secrets"
          name: ssh-key
          readOnly: true         
      args: 
        - ls -la /mnt/secrets;
          mkdir $HOME/.ssh;
          ls -la  $HOME/.ssh/;
          echo "Host *" >> $HOME/.ssh/config;
          echo "  IdentityFile  /mnt/secrets/SSH_PRIVATE_KEY" >> $HOME/.ssh/config;
          echo "  StrictHostKeyChecking no" >> $HOME/.ssh/config;
          echo "  User git" >> $HOME/.ssh/config;
          echo "  IdentitiesOnly yes" >> $HOME/.ssh/config;          
          echo "  UserKnownHostsFile /dev/null" >> $HOME/.ssh/config;  
          cat $HOME/.ssh/config;     
          git remote set-url origin {{inputs.parameters.repoPath}} 2>/dev/null;
          git remote -v;
          git config --global user.email '{{inputs.parameters.gitUserEmail}}';
          git config --global user.name '{{inputs.parameters.gitUsername}}';
          git status;
          git pull;
          git add .;
          git commit -m "{{inputs.parameters.commitMessage}}"  || echo "Assuming this was committed on previous run, not erroring out" ;
          git push || bash -c "sleep 10 && echo 'waiting before trying again' && exit 1";

      envFrom:
      - secretRef:
          name: ci-secrets

          
          

  - name: git-short-sha
    inputs:
      artifacts:
      - name: repo-source
        path: /src
      parameters: 
      - name: appDir
    script:
      image: golang:latest
      workingDir: "{{inputs.parameters.appDir}}"
      command: [bash]
      source: |
        git log -1 --pretty=format:%h
