---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-oidc-restart-job
  namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-oidc-restart-job
  namespace: argocd
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-oidc-restart-job
  namespace: argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-oidc-restart-job
subjects:
  - kind: ServiceAccount
    name: argocd-oidc-restart-job
    namespace: argocd
---
apiVersion: batch/v1
kind: Job
metadata:
  name: argocd-oidc-restart-job
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: PostSync
spec:
  template:
    spec:
      containers:
        - name: argocd-oidc-restart-job
          image: public.ecr.aws/bitnami/kubectl:1.28
          command: ["/bin/sh", "-c"]
          args:
            - echo "Give me time to think" && sleep 15;

             (kubectl rollout restart deploy --selector app.kubernetes.io/name=argocd-server -n argocd 
             && echo "Restarting argocd-server pod's" ) || echo "Unable to restart ArgoCD application controller";

             (kubectl rollout restart sts --selector app.kubernetes.io/name=argocd-application-controller -n argocd 
             && echo "Restarting argocd-application-controller pod's" ) || echo "Unable to restart ArgoCD application controller"
      restartPolicy: OnFailure
      serviceAccountName: argocd-oidc-restart-job

