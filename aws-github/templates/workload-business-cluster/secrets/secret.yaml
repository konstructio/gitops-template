apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: repo-credentials-template-<BUSINESS_ORG>
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: '20'
  labels:
    app.kubernetes.io/part-of: argocd
spec:
  refreshInterval: 10s
  secretStoreRef:
    kind: ClusterSecretStore
    name: <CLUSTER_NAME>-vault-kv-secret
  target:
    name: repo-credentials-template-<BUSINESS_ORG>
    creationPolicy: Owner
    template:
      metadata:
        annotations:
          managed-by: argocd.argoproj.io
        labels:
          argocd.argoproj.io/secret-type: repository
      type: Opaque
      data:
        # Template will be populated from Vault data
        type: "{{ .type }}"
        name: "{{ .name }}"
        url: "{{ .url }}"
        username: "{{ .username }}"
        password: "{{ .password }}"
  dataFrom:
    - extract:
        key: argocd/repo-credentials-template/<BUISNESS_UNIT_NAME>
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: repo-credentials-template-<PLATFORM-ORG>
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: '20'
  labels:
    app.kubernetes.io/part-of: argocd
spec:
  refreshInterval: 10s
  secretStoreRef:
    kind: ClusterSecretStore
    name: <CLUSTER_NAME>-vault-kv-secret
  target:
    name: repo-credentials-template-<PLATFORM-ORG>
    creationPolicy: Owner
    template:
      metadata:
        annotations:
          managed-by: argocd.argoproj.io
        labels:
          argocd.argoproj.io/secret-type: repository
      type: Opaque
      data:
        # Template will be populated from Vault data
        type: "{{ .type }}"
        name: "{{ .name }}"
        url: "{{ .url }}"
        username: "{{ .username }}"
        password: "{{ .password }}"
  dataFrom:
    - extract:
        key: argocd/repo-credentials-template/<BUISNESS_UNIT_NAME>-platform
